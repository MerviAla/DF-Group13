import machine
from machine import Pin, PWM
import time

# GPIO-pinnit
motor_front_in1 = Pin(0, Pin.OUT)
motor_front_in2 = Pin(1, Pin.OUT)
motor_rear_in3 = Pin(2, Pin.OUT)
motor_rear_in4 = Pin(3, Pin.OUT)

ultrasonic_sig = Pin(4, Pin.OUT)
led = Pin(16, Pin.OUT)
buzzer = PWM(Pin(11))
button = Pin(7, Pin.IN, Pin.PULL_UP)

#variables
alarm_time = "15:07"
is_alarm_active = True

#setting alarm
def set_alarm(time):
    global alarm_time
    alarm_time = time
    print("Alarm set for: ", alarm_time)

# Motor control functions
def stop_motor():
    motor_front_in1.value(0)
    motor_front_in2.value(0)
    motor_rear_in3.value(0)
    motor_rear_in4.value(0)

def move_forward():
    motor_front_in1.value(1)
    motor_front_in2.value(0)
    motor_rear_in3.value(0)
    motor_rear_in4.value(0)

def turn_left():
    motor_front_in1.value(1)
    motor_front_in2.value(0)
    motor_rear_in3.value(1)
    motor_rear_in4.value(0)
    time.sleep(0.5) #Esim.
    stop_motor()

# Sound buzzer
def play_buzzer():
    buzzer.freq(1000)  # Taajuus (Hz)
    buzzer.duty_u16(500)  # Äänenvoimakkuus
    time.sleep(0.5)
    buzzer.duty_u16(0)  # Sammuta ääni

# Alarm logic
def alarm():
    global is_alarm_active
    is_alarm_active = True
    print("Alarm activated!")
    while is_alarm_active:
        move_forward()
        led.value(1)
        play_buzzer()

        # Check for obstacles
        distance = get_distance()
        if distance < 20: #20cm distance
            stop_motor()
            time.sleep(0.2)
            turn_left()
            distance = get_distance()
            if distance >= 20:
                move_forward()
        
        # Check button to deactivate alarm
        if check_button():
            stop_motor()
            buzzer.duty_u16(0)
            is_alarm_active = False
            print("Alarm deactivated!")

def check_time():
    current_time = "15:49"
    return current_time

# Main Loop
def main():
    while True:
        current_time = check_time()
        if current_time == alarm_time:
            #alarm()
            turn_left()
            time.sleep(1)  # Reduce CPU usage

# Example Setup
alarm_time = "15:49"
main()  # Run main loop
